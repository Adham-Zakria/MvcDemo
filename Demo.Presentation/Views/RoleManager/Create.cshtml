@model IdentityRole
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container mt-4">
    <h2>Create a New Role</h2>
    <hr />

    <div class="row">
        <div class="col-md-6">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group mb-3">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" placeholder="Enter role name" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                    <small class="form-text text-muted">Role names should be descriptive and use title case (e.g., 'ContentManager').</small>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Create Role
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to List
                    </a>
                </div>
            </form>
        </div>

        <div class="col-md-6">
            <div class="card bg-light">
                <div class="card-header">
                    <h5><i class="fas fa-info-circle"></i> Role Creation Guidelines</h5>
                </div>
                <div class="card-body">
                    <ul>
                        <li>Role names should be meaningful and describe the access level</li>
                        <li>Avoid spaces in role names (use CamelCase instead)</li>
                        <li>Examples: Admin, ContentEditor, ReportViewer etc.</li>
                        <li>After creating a role, you can assign permissions to it</li>
                        <li>Roles can be assigned to users in the User Manager</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Client-side validation for role name
        document.addEventListener('DOMContentLoaded', function() {
            const roleNameInput = document.getElementById('Name');

            roleNameInput.addEventListener('input', function() {
                // Remove any spaces from the input
                this.value = this.value.replace(/\s+/g, '');

                // Capitalize first letter if not empty
                if (this.value.length > 0) {
                    this.value = this.value.charAt(0).toUpperCase() + this.value.slice(1);
                }
            });
        });
    </script>
}